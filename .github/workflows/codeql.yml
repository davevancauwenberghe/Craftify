name: Craftify CodeQL Analysis

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  schedule:
    - cron: '35 0 * * 4'
  workflow_dispatch:

jobs:
  analyze:
    name: Analyze (${{ matrix.language }})
    runs-on: ${{ (matrix.language == 'swift' && 'macos-latest') || 'ubuntu-latest' }}
    permissions:
      security-events: write
      packages: read
      actions: read
      contents: read
    strategy:
      fail-fast: false
      matrix:
        include:
          - language: actions
            build-mode: none
          - language: swift
            build-mode: autobuild
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Select Xcode Version (Swift only)
        if: matrix.language == 'swift'
        run: |
          ls -ld /Applications/Xcode*.app
          XCODE_PATH=$(find /Applications -maxdepth 1 -name "Xcode*.app" | head -n 1)
          if [ -z "$XCODE_PATH" ]; then
            echo "No Xcode installation found"
            exit 1
          fi
          sudo xcode-select -s "$XCODE_PATH/Contents/Developer"
          xcodebuild -version
          echo "Selected Xcode at $XCODE_PATH"

      - name: Build Swift Package (Swift only)
        if: matrix.language == 'swift'
        run: |
          if [ -f "Package.swift" ]; then
            swift build -v
          elif [ -f "Craftify/Package/Package.swift" ]; then
            swift build -v --directory Craftify/Package
          else
            echo "No Package.swift found in root or Craftify/Package"
          fi

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: ${{ matrix.language }}
          build-mode: ${{ matrix.build-mode }}
          queries: security-and-quality

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
        with:
          category: "/language:${{matrix.language}}"
